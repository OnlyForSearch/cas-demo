<!DOCTYPE html>
<html>
<head>
    <title>bootstrap3样式</title>
    <!-- Bootstrap -->

    <link rel="stylesheet" href="../js/bootstrap-3.3.7/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="../js/bootstrap/3/dataTables.bootstrap.css">
    <!--<link rel="stylesheet" href="../asset/lib/dataTables-1.10.7/media/css/jquery.dataTables.min.css">-->


    <style type="text/css">
        td.highlight {
            color: blue;
            font-weight: bold;
        }

        td.highlight {
            background-color: whitesmoke !important;
        }

        table.dataTable tbody tr.selected {
            background-color: #B0BED9;
        }

        td.details-control {
            background: url('img/details_open.png') no-repeat center center;
            cursor: pointer;
        }

        tr.shown td.details-control {
            background: url('img/details_close.png') no-repeat center center;
        }
    </style>

</head>
<body>
<hr>
<h3>数组</h3>

<table id="example" class="table table-striped table-hover <!--table-condensed-->  " cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>
<hr>
<h3>对象</h3>
<table id="example2" class="table table-striped table-hover <!--table-condensed-->  " cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>
<hr>
<h3>嵌套对象数据（对象）</h3>
<table id="example3" class="table table-striped table-hover <!--table-condensed-->  " cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>


<hr>
<h3>嵌套数组的方式</h3>

<table id="example4" class="table table-striped table-hover <!--table-condensed-->  " cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>


<hr>

<h3>    操作单元格内容</h3>
<table id="example5" class="table table-striped table-hover <!--table-condensed-->  " cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>
<hr>

<h3>    自定义数据源</h3>
<table id="example6" class="table table-striped table-hover <!--table-condensed-->  " cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>


<hr>

<h3>    自定义数据源2</h3>


<table id="example7" class="display" cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>





<hr>

<h3>
    下面的示例显示启用延迟渲染数据表。对于这个小例子，你可能会注意到没有区别，但较大的表可以从简单的启用这个参数显著受益。</h3>


<table id="example8" class="display" cellspacing="0" width="100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th>Name</th>
        <th>Position</th>
        <th>Office</th>
        <th>Extn.</th>
        <th>Start date</th>
        <th>Salary</th>
    </tr>
    </tfoot>
</table>




</body>

<script src="../asset/lib/jquery-1.11.3.min.js"></script>


<script src="../asset/lib/dataTables-1.10.7/media/js/jquery.dataTables.js"></script>


<script src="../js/bootstrap-3.3.7/dist/js/bootstrap.js"></script>
<script src="../js/bootstrap/3/dataTables.bootstrap.js"></script>


<script type="text/javascript">

    $(document).ready(function () {


        $('#example').DataTable( {
            "ajax": "data/arrays.txt"
        } );



        /*对象方式*/
        $('#example2').DataTable( {
            "ajax": "data/objects.txt",
            "columns": [
                { "data": "name" },
                { "data": "position" },
                { "data": "office" },
                { "data": "extn" },
                { "data": "start_date" },
                { "data": "salary" }
            ]
        } );

        /*嵌套对象的方式*/
        $('#example3').DataTable( {
            "processing": true,
            "ajax": "data/objects_deep.txt",
            "columns": [
                { "data": "name" },
                { "data": "hr.position" },
                { "data": "contact.0" },
                { "data": "contact.1" },
                { "data": "hr.start_date" },
                { "data": "hr.salary" }
            ]
        } );



        /*嵌套对象数组的方式*/
        $('#example4').DataTable( {
            "ajax": "data/objects_subarrays.txt",
            "columns": [
                { "data": "name[, ]" },
                { "data": "hr.0" },
                { "data": "office" },
                { "data": "extn" },
                { "data": "hr.2" },
                { "data": "hr.1" }
            ]
        } );



/********操作单元格内容*****/
        var table4 = $('#example5').DataTable( {
            "ajax": "data/arrays4.txt",
            "columnDefs": [ {
                "targets": -1,/*倒数第一个*/
                "data": null,/*不添加数据*/
                "defaultContent": "<button>Click!</button>"/*默认内容为*/
            } ]
        } );

        $('#example5 tbody').on( 'click', 'button', function () {
            var data = table4.row( $(this).parents('tr') ).data();
            alert( data[0] +"'s salary is: "+ data[ 5 ] );
        } );


        /*************自定义数据源**************/
        $('#example6').DataTable( {
            "ajax": {
                "url": "data/arrays_custom_prop.txt",
                "dataSrc": "demo"
            }
        } );


        /*自定义数据源*/
        $('#example7').DataTable( {
            "ajax": {
                "url": "data/objects_root_array.txt",
                "dataSrc": ""
            },
            "columns": [
                { "data": "name" },
                { "data": "position" },
                { "data": "office" },
                { "data": "extn" },
                { "data": "start_date" },
                { "data": "salary" }
            ]
        } );




        /*
         下面的示例显示启用延迟渲染数据表。对于这个小例子，你可能会注意到没有区别，但较大的表可以从简单的启用这个参数显著受益。*/
        $('#example8').DataTable( {
            "ajax": "data/arrays.txt",
            "deferRender": true// 下面的示例显示启用延迟渲染数据表
        } );

    });
</script>
</html>