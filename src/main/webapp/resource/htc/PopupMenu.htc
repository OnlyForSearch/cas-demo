<PUBLIC:COMPONENT TAGNAME="PopupMenu">
	<PUBLIC:PROPERTY NAME="width"/>
	<PUBLIC:PROPERTY NAME="icoUrl"/>
	<PUBLIC:PROPERTY NAME="cssUrl"/>
	<PUBLIC:PROPERTY NAME="srcElement"/>
	<PUBLIC:PROPERTY NAME="selectType" value="position"/>
	<PUBLIC:METHOD NAME="refresh" />
	<PUBLIC:METHOD NAME="itemDisable" />
	<PUBLIC:METHOD NAME="clear" />
	<PUBLIC:METHOD NAME="addItem" />
	<PUBLIC:METHOD NAME="addLine" />
	<PUBLIC:METHOD NAME="show" />
	<PUBLIC:METHOD NAME="getSrcElement" />
	<PUBLIC:METHOD NAME="hidden" />
	<PUBLIC:METHOD NAME="mouseOver"/>
	<PUBLIC:METHOD NAME="mouseOut"/>
	<PUBLIC:METHOD NAME="setItemDisable"/>
	<PUBLIC:METHOD NAME="setItemAttValue"/>
	<PUBLIC:METHOD NAME="setHasPriList"/>
	<PUBLIC:METHOD NAME="setIsRefreshData"/>
	<PUBLIC:ATTACH EVENT="ondocumentready" HANDLER="popupMenuIni" />
	<PUBLIC:EVENT NAME="onhide" ID="hideId" />
</PUBLIC:COMPONENT>

<SCRIPT LANGUAGE="JScript">
	//缺省的菜单宽度
	var defaultWidth = 150;
	//右键菜单的高度限制为610 jiangmt 20091126
	var defaultHeight = 610;
	//每个菜单选项高度
	var itemHeight = 24;
    //右键菜单xml对象
    var xmldoc = new ActiveXObject("Microsoft.XMLDOM");
	// 用来存储Popup窗口家族的数组
    var pops = new Array();

	//css文件所在路径
	var CSS_URL = "../css/PopupMenu.css";
	//默认的ico所在路径
	var ICO_URL = "../image/ico/";
	var ALPHA_ICO;
    //自身路径
    //var selfPath = "PopupMenu.htc";
    var selfPath = /[^\/]*PopupMenu.htc/;
	//边框样式
	var borderStyle = "1px solid #0A246A";
	//选中背景色
	var bgColor = "#B6BDD2";

	//因为上下的边框所以itemDivHeight比itemHeight少两个像素
	var itemDivHeight = itemHeight-2;
	//每个图标高16px所以要减16
	var icoPaddingTop = (itemDivHeight-16)/2;
	//9号字12px比图标16px的paddingtop少2px
	var cellPaddingTop = icoPaddingTop+2;
    var arrPaddingTop = 1;
	var cellPaddingLeft = 6;
	var offset = 3;
	var oPopupTable;
	var disableItem = new Array();
	var itemPath = new Array();
	var itemValue = new Array();
	var itemAtt = new Array();
	
	var isRefreshData = true;

	//初始化各个对象
	function popupMenuIni()
	{
		ALPHA_ICO = document.URL.replace(selfPath,"../image/ico/Alpha.gif");
		var i=0;
		var j=0;
		element.style.display = "none";
		width = (width==null)?defaultWidth:parseInt(width);
		icoUrl = (icoUrl==null)?document.URL.replace(selfPath,ICO_URL):icoUrl;
		//得到css文件所在的路径
		cssUrl = cssUrl || getCssPath('PopupMenu.css') || document.URL.replace(selfPath,CSS_URL);
	}
	
	function unload()
	{
		var oEvent = createEventObject();
		hideId.fire(oEvent);
	}

    function getPopup(degree)
    {
	    if (degree < 0)	// 层数不能小于0
		    return null;
	    if (pops[degree] != null) //如果已经存在则不需创建
		    return pops[degree];
	    if (degree == 0)
	    {
		    pops[0] = window.createPopup(); //创建最顶层Popup窗口
		    pops[0].document.parentWindow.attachEvent("onunload",unload);
		}
	    else
        {
		    if (pops[degree - 1] == null)
			    return null;
		    pops[degree] = pops[degree - 1].document.parentWindow.createPopup(); //从父Popup窗口创建子Popup窗口
	    }
	    return pops[degree];
    }

	//清空菜单;
	function clear()
	{
		element.innerHTML = "";
	}

	//添加菜单选项
	function addItem(ico,label,event,name,priName)
	{
		var oItem = window.document.createElement('<item ico="'+ico+'" event="'+event+'" label="'+label+'" name="'+name+'" priName="'+priName+'">');
		element.appendChild(oItem);
		return oItem;
	}

	//添加连线
	function addLine()
	{
		var oItem = window.document.createElement('<line>');
		element.appendChild(oItem);
	}
		
	//设置菜单节点不可用
	function setItemDisable(tagName)
	{
		disableItem.push(getXpath(tagName));
	}
	
	//设置拥有的权限的节点
	function setHasPriList(oDoc)
	{
		var priList = oDoc.selectNodes("//PRIVILEGE_VALUE");
		var priName,xpath;
		for(var i=0;i<priList.length;i++)
		{
			priName = priList[i].text;
			xpath = "//ITEM[@priName='"+priName+"']";
			pushItemAtt(xpath,"disable","false");
		}
	}
	
	function pushItemAtt(path,attName,value)
	{
		itemPath.push(path);
		itemAtt.push(attName);
		itemValue.push(value);
	}
	
	//设置菜单节点值
	function setItemAttValue(path,attName,value)
	{
		pushItemAtt(getXpath(path),attName,value);
	}

	//生成右键菜单
	function refresh(_xpath,degree,iX,iY,isExceed)
	{
        degree = parseInt(degree);
        iX = parseInt(iX);
        iY = parseInt(iY);
        var i=0;
		var oItem;
        var oItemEvent;
        var oItemIco;
        var oItemLabel;
        var clickEvent;
        var dynamicLoadEvent;
        var imgHTML;
        var oItemOverEvent;
        var oItemOutEvent;
        var xpath;
        var parentRef="";
        var selfRef;
        var menuWidth;
        //整个右键菜单的高度
	    var popupHeight = 2;
        var itemNodes = xmldoc.selectSingleNode(_xpath).childNodes;
		var oPopup = getPopup(degree);
		var oTRHTML;
        for(i=0;i<=degree;i++)
        {
            parentRef+="parent.";
        }
        selfRef = parentRef+uniqueID+".";
        var commonEvent = selfRef+"hidden()";
        if(oPopup.document.styleSheets.length == 0)
            oPopup.document.createStyleSheet(cssUrl);
		var oPopupBody = oPopup.document.body;
		oPopupBody.attachEvent("oncontextmenu",cancel);
		oPopupBody.attachEvent("onselectstart",cancel);
		oPopupBody.attachEvent("ondrag",cancel);
		//var outHTML = '<DIV class="popupDIV">';
		//在选择视图的菜单上添加带有滚动条 jiangmt 20091116
		var outHTML = '<DIV class="popupDIV" style="width:100%;height:100%;overflow :auto;">';  
		if(itemNodes && itemNodes.length>0)
		{
            for(i=0;i<itemNodes.length;i++)
            {
            	if(itemNodes[i].tagName.toLowerCase() == "item")
            	{
	            	menuWidth = 2+getWidth(itemNodes[i].getAttribute("label"))+22*2+cellPaddingLeft;
	            	if(menuWidth>width)
	            	{
	            		width = menuWidth;
	            	}
            	}
            }               
			outHTML += '<TABLE border="0" width='+(width-2)+' cellspacing="0" cellpadding="0">';
			var lineIndex = -1;
            var itemCount = 0;
            var left;
            if(isExceed==1)
            {
                left = iX - width+offset;
             }
             else
             {
                if (iX + width>screen.width)
                {
                    left = screen.width-width*2+offset;
                    isExceed = 1;
                }
                else if (iX + 2*width>screen.width)
                {
                     left = iX - width+offset;
                     isExceed = 1;
                 }
                 else
                 {
                     left = iX+width-offset;
                 }
             }
			for(i=0;i<itemNodes.length;i++)
			{
				oItem = itemNodes[i];
				var oItemTagName = oItem.tagName.toLowerCase();
				//节点是菜单项
				if(oItemTagName == "item")
				{
                    oItemEvent = oItem.getAttribute("event");
                    if(oItemEvent=="")
                    {
                    	oItemEvent = null;
                    }
                    oItemIco = oItem.getAttribute("ico");
                    oItemLabel = oItem.getAttribute("label");
                    dynamicLoadEvent = oItem.getAttribute("DynamicLoadEvent");
					imgHTML = (oItemIco==null||oItemIco=="")?'<IMG src="'+ALPHA_ICO+'" width="16" height="16">':'<IMG src="'+icoUrl+oItemIco+'" width="16" height="16">';
                    if(dynamicLoadEvent)
                    {
                    	var oAddObj = eval(dynamicLoadEvent);
                    	if(oAddObj)
                    	{
                    		if(typeof(oAddObj.length) == "undefined")
							{
								oItem.appendChild(oAddObj);
							}
							else
							{
								for(var j=0;j<oAddObj.length;j++)
								{
									oItem.appendChild(oAddObj[j].cloneNode(true));
								}
							}
                    	}
                    }
                    if(oItem.hasChildNodes())
                    {
                        xpath = _xpath+"/ITEM";
                        xpath += "["+itemCount+"]";                    
                        overEvent = selfRef+"mouseOver(this,'"+xpath+"',"+left+","+(iY+popupHeight)+","+isExceed+")";
		                outEvent = selfRef+"mouseOut(this)";
                    }
                    else
                    {
                        overEvent = selfRef+"mouseOver(this)";
		                outEvent = selfRef+"mouseOut(this)";
                    }
                    if(oItemEvent == null && oItem.hasChildNodes())
                    {
                        clickEvent = selfRef+"refresh('"+xpath+"',"+(degree+1)+","+left+","+(iY+popupHeight)+","+isExceed+")";
                    }
                    else if(oItemEvent == null)
                    {
                        clickEvent = "";
                    }
                    else
                    {
                    	oItemEvent=EncodeSpecialStrs(oItemEvent,['"'],["&quot;"])
                        clickEvent = parentRef+oItemEvent+";"+commonEvent;
                    }
                    oTRHTML = (oItem.getAttribute("disable") == "true")?"<TR DISABLED=true ":"<TR ";
                    outHTML += oTRHTML+'height="'+itemHeight+'" degree='+(degree+1)+' onMouseOver="'+overEvent+'" onMouseOut="'+outEvent+'" onClick="'+clickEvent+'">';
					outHTML +=		'<td width="22" class="icoTD">';
					outHTML +=			'<div style="height:'+itemDivHeight+'px;padding:'+icoPaddingTop+'px 0px 0px 2px" class="icoDiv">';
					outHTML +=				imgHTML;
					outHTML +=			'</div>';
					outHTML +=		'</td>';
					outHTML +=		'<td>';
					outHTML +=			'<span style="height:'+itemDivHeight+'px;padding:'+cellPaddingTop+'px 0px 0px '+cellPaddingLeft+'px;" class="cellDiv">' ;
					outHTML +=				oItemLabel;
					outHTML +=			'</span>';
					outHTML +=		'</td>';
                    outHTML +=		'<td width="22">';
					outHTML +=			'<span style="height:'+itemDivHeight+'px;padding:'+arrPaddingTop+'px 0px 0px 0px;" class="arrDiv">' ;
                    if(oItem.hasChildNodes())
                        outHTML +=		    '4';
					outHTML +=			'</span>';
                    outHTML +=		'</td>';
                    popupHeight += itemHeight;
                    itemCount++;
				}
				//节点是连线
				else if(oItemTagName == "line")
				{
                    lineIndex = i;
					outHTML += '<TR height="1">';
					outHTML +=		'<TD width="22" class="icoTD"></TD>';
					outHTML +=		'<td colspan="2"><div style="margin-left:'+cellPaddingLeft+'px;" class="line"></div></td>';
					outHTML += '</TR>';
                    popupHeight += 1;
				}
			}
			outHTML += '</TABLE>';
		}
		//判断如果菜单高度大于设置默认的最高高度，则实际的高度为默认的最高高度 jiangmt 20091126
		if(popupHeight > defaultHeight)
			popupHeight = defaultHeight;
		outHTML += '</DIV>';
		oPopupBody.innerHTML = outHTML;
		oPopupTable = oPopupBody.firstChild.firstChild;
		var tempY=iY;
		if(iY+popupHeight>screen.height){
			tempY=screen.height-popupHeight;
		}

        getPopup(degree).show(iX,tempY,width,popupHeight);
        //getPopup(degree).show(iX,iY,width,popupHeight);
	}

	function mouseOver(oTR,xpath,iX,iY,isExceed)
	{
        var icoStyle = oTR.cells[0].firstChild.runtimeStyle;
		var cellStyle = oTR.cells[1].firstChild.runtimeStyle;
        var arrStyle = oTR.cells[2].firstChild.runtimeStyle;
		oTR.cells[0].firstChild.className = oTR.cells[0].firstChild.className + " popupmenu-ico-background";
		icoStyle.paddingLeft = "1px";
		icoStyle.paddingTop = (icoPaddingTop-1).toString()+"px";
		icoStyle.backgroundColor = bgColor;
		icoStyle.borderTop = borderStyle;
		icoStyle.borderLeft = borderStyle;
		icoStyle.borderBottom = borderStyle;
		oTR.cells[1].firstChild.className = oTR.cells[1].firstChild.className + " popupmenu-cell-background";
		cellStyle.paddingTop = (cellPaddingTop-1).toString()+"px";
		cellStyle.backgroundColor = bgColor;
		cellStyle.borderTop = borderStyle;
		cellStyle.borderBottom = borderStyle;
		oTR.cells[2].firstChild.className = oTR.cells[2].firstChild.className + " popupmenu-arr-background";
        arrStyle.paddingTop = (arrPaddingTop-1).toString()+"px";
		arrStyle.backgroundColor = bgColor;
		arrStyle.borderTop = borderStyle;
		arrStyle.borderRight = borderStyle;
		arrStyle.borderBottom = borderStyle;
        if (typeof(xpath) != 'undefined')
        {
            var degree = oTR.degree;
            refresh(xpath,degree,iX,iY,isExceed);
        }
        else if(pops[oTR.degree] && pops[oTR.degree].isOpen)
        {
            pops[oTR.degree].hide();
        }
	}

	function mouseOut(oTR)
	{
		var icoStyle = oTR.cells[0].firstChild.runtimeStyle;
		var cellStyle = oTR.cells[1].firstChild.runtimeStyle;
        var arrStyle = oTR.cells[2].firstChild.runtimeStyle;
		icoStyle.paddingLeft = "";
		icoStyle.paddingTop = "";
		oTR.cells[0].firstChild.className = oTR.cells[0].firstChild.className.replace("popupmenu-ico-background","");;
		icoStyle.backgroundColor = "";
		icoStyle.borderTop = "";
		icoStyle.borderLeft = "";
		icoStyle.borderBottom = "";
		cellStyle.paddingTop = "";
		oTR.cells[1].firstChild.className = oTR.cells[1].firstChild.className.replace("popupmenu-cell-background","");
		cellStyle.backgroundColor = "";
		cellStyle.borderTop = "";
		cellStyle.borderBottom = "";
        arrStyle.paddingTop = "";
		oTR.cells[2].firstChild.className = oTR.cells[2].firstChild.className.replace("popupmenu-arr-background","");
		arrStyle.backgroundColor = "";
		arrStyle.borderTop = "";
		arrStyle.borderRight = "";
		arrStyle.borderBottom = "";
	}

	//得到单击的对象
	function getSrcElement()
	{
		srcElement = window.document.elementFromPoint(event.x,event.y);
		return srcElement;
	}
	
	function setIsRefreshData(oIs)
	{
		isRefreshData = oIs;
	}
	
	function addSubItems(xml, oNode, xmldoc)
	{
 		if(xml!=null)
 		{
			var oParent;
			if(oNode!=null)
			{
				oParent = xmldoc.selectSingleNode(getXpath(oNode));
			}
			else
			{
				oParent = xmldoc.documentElement;
			}
			if(typeof(xml.length) == "undefined")
			{
				oParent.appendChild(xml);
			}
			else
			{
				for(i=0;i<xml.length;i++)
				{
					oParent.appendChild(xml[i].cloneNode(true));
				}
			}
		}
	}
	
	// 允许加载多个子菜单。adit by wuzhb, at 2007-05-22. 
	function show(xmls,oNodes,iX,iY)
	{
 		if(isRefreshData)
 		{
 			xmldoc.async = false;
  			xmldoc.loadXML("<root>"+element.innerHTML+"</root>");
 			if(xmls!=null)
 			{
				if(oNodes==null || typeof(oNodes.length) == "undefined" || typeof(oNodes) == "string")
				{
				    addSubItems(xmls, oNodes, xmldoc);
				}
				else
				{
				    for(var i=0;i<oNodes.length;i++)
				    {
				        addSubItems(xmls[i], oNodes[i], xmldoc);
				    }
				}
			}
		}
		if(iX == null) iX = event.screenX+1;
		if(iY == null) iY = event.screenY+1;
		var oItems;
		for(i=0;i<itemPath.length;i++)
		{
			var oList = xmldoc.selectNodes(itemPath[i]);
			if(oList)
			{
				for(var j=0;j<oList.length;j++)
				{
					oList[j].setAttribute(itemAtt[i],itemValue[i]);
				}
			}
		}
		for(i=0;i<disableItem.length;i++)
		{
			oItems = xmldoc.selectNodes(disableItem[i]);
			for(j=0;j<oItems.length;j++)
			{
				oItems[j].setAttribute("disable","true");
			}
		}
		
		disableItem.length = 0;
		itemPath.length = 0;
		itemAtt.length = 0;
		itemValue.length = 0;
		
 		refresh("/root",0,iX,iY,0);
 		if(event)
 		{
			event.returnValue = false;
		}
	}

	//需要考虑横线的对象
	function itemDisable(oIndexs)
	{
		var oIndexArray = oIndexs.split(",");
		for(i=0;i<oIndexArray.length;i++)
			oPopupTable.rows[oIndexArray[i]].disabled = true;
	}

	function hidden()
	{
		getPopup(0).hide();
	}

	function cancel()
	{
		return false;
	}
	
	function getXpath(itemIndex)
	{
		var xpath;
		if(element.selectType == 'position')
		{
			xpath = "/root";
			var itemIndexs = itemIndex.split("/");
			for(i=0;i<itemIndexs.length;i++)
			{
				xpath += "/ITEM["+itemIndexs[i]+"]";
			}
		}
		else
		{
			xpath = "//ITEM[@"+element.selectType+"='"+itemIndex+"']";
		}
		
		return xpath;
	}
	
	function getWidth(oValue)
	{
		var arr=oValue.match(/[^\x00-\xff]/ig);
        var length = oValue.length+(arr==null?0:arr.length);
        return length*6;//因为9pt每个字节的宽度为6
	}

</SCRIPT>
